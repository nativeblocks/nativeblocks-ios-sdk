// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios17.2 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name NativeblocksCore
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
import Swift
import SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public protocol INativeBlock {
  func BlockView(blockProps: NativeblocksCore.BlockProps) -> any SwiftUI.View
}
public struct BlockProps {
  public var listItemIndex: Swift.Int?
  public var variables: [Swift.String : NativeblocksCore.NativeVariableModel]?
  public var onVariableChange: ((NativeblocksCore.NativeVariableModel) -> Swift.Void)?
  public var actions: [Swift.String : [NativeblocksCore.NativeActionModel]]?
  public var onHandleAction: ((Swift.Int, NativeblocksCore.NativeActionModel?, Swift.String) -> Swift.Void)?
  public var block: NativeblocksCore.NativeBlockModel?
  public var onSubBlock: (([Swift.String : NativeblocksCore.NativeBlockModel], Swift.Int) -> SwiftUI.AnyView)?
}
public struct NativeActionModel : Swift.Hashable, Swift.Codable {
  public let id: Swift.String?
  public let key: Swift.String?
  public let event: Swift.String?
  public let triggers: [NativeblocksCore.NativeActionTriggerModel?]?
  public static func == (lhs: NativeblocksCore.NativeActionModel, rhs: NativeblocksCore.NativeActionModel) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public func encode(to encoder: any Swift.Encoder) throws
  public var hashValue: Swift.Int {
    get
  }
  public init(from decoder: any Swift.Decoder) throws
}
public struct NativeActionTriggerModel : Swift.Hashable, Swift.Codable {
  public let id: Swift.String?
  public let parentId: Swift.String?
  public let keyType: Swift.String?
  public let then: NativeblocksCore.NativeActionTriggerThen?
  public let properties: [Swift.String : NativeblocksCore.NativeActionTriggerPropertyModel]?
  public let data: [Swift.String : NativeblocksCore.NativeActionTriggerDataModel]?
  public static func == (lhs: NativeblocksCore.NativeActionTriggerModel, rhs: NativeblocksCore.NativeActionTriggerModel) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public func encode(to encoder: any Swift.Encoder) throws
  public var hashValue: Swift.Int {
    get
  }
  public init(from decoder: any Swift.Decoder) throws
}
public struct NativeActionTriggerPropertyModel : Swift.Hashable, Swift.Codable {
  public let key: Swift.String
  public let value: Swift.String
  public let type: Swift.String
  public static func == (lhs: NativeblocksCore.NativeActionTriggerPropertyModel, rhs: NativeblocksCore.NativeActionTriggerPropertyModel) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public func encode(to encoder: any Swift.Encoder) throws
  public var hashValue: Swift.Int {
    get
  }
  public init(from decoder: any Swift.Decoder) throws
}
public struct NativeActionTriggerDataModel : Swift.Hashable, Swift.Codable {
  public let key: Swift.String
  public let value: Swift.String
  public let type: Swift.String
  public static func == (lhs: NativeblocksCore.NativeActionTriggerDataModel, rhs: NativeblocksCore.NativeActionTriggerDataModel) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public func encode(to encoder: any Swift.Encoder) throws
  public var hashValue: Swift.Int {
    get
  }
  public init(from decoder: any Swift.Decoder) throws
}
public enum NativeActionTriggerThen : Swift.String, Swift.Hashable, Swift.Codable {
  case success
  case failure
  case next
  case end
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public struct NativeBlockModel : Swift.Hashable, Swift.Codable {
  public var id: Swift.String?
  public var parentId: Swift.String?
  public var keyType: Swift.String?
  public var key: Swift.String?
  public var visibility: Swift.String?
  public var properties: [Swift.String : NativeblocksCore.NativeBlockPropertyModel]?
  public var data: [Swift.String : NativeblocksCore.NativeBlockDataModel]?
  public var subBlocks: [Swift.String : NativeblocksCore.NativeBlockModel]?
  public static func == (lhs: NativeblocksCore.NativeBlockModel, rhs: NativeblocksCore.NativeBlockModel) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public func encode(to encoder: any Swift.Encoder) throws
  public var hashValue: Swift.Int {
    get
  }
  public init(from decoder: any Swift.Decoder) throws
}
public struct NativeBlockPropertyModel : Swift.Hashable, Swift.Codable {
  public var key: Swift.String
  public var valueMobile: Swift.String
  public var valueTablet: Swift.String
  public var valueDesktop: Swift.String
  public var type: Swift.String
  public static func == (lhs: NativeblocksCore.NativeBlockPropertyModel, rhs: NativeblocksCore.NativeBlockPropertyModel) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public func encode(to encoder: any Swift.Encoder) throws
  public var hashValue: Swift.Int {
    get
  }
  public init(from decoder: any Swift.Decoder) throws
}
public struct NativeBlockDataModel : Swift.Hashable, Swift.Codable {
  public var key: Swift.String
  public var value: Swift.String
  public var type: Swift.String
  public static func == (lhs: NativeblocksCore.NativeBlockDataModel, rhs: NativeblocksCore.NativeBlockDataModel) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public func encode(to encoder: any Swift.Encoder) throws
  public var hashValue: Swift.Int {
    get
  }
  public init(from decoder: any Swift.Decoder) throws
}
public struct NativeVariableModel : Swift.Hashable, Swift.Codable {
  public var key: Swift.String
  public var value: Swift.String
  public var type: Swift.String
  public static func == (lhs: NativeblocksCore.NativeVariableModel, rhs: NativeblocksCore.NativeVariableModel) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public func encode(to encoder: any Swift.Encoder) throws
  public var hashValue: Swift.Int {
    get
  }
  public init(from decoder: any Swift.Decoder) throws
}
public enum NativeblocksEdition {
  case cloud(endpoint: Swift.String, apiKey: Swift.String, developmentMode: Swift.Bool)
}
@_hasMissingDesignatedInitializers public class NativeblocksManager {
  public static func initialize(edition: NativeblocksCore.NativeblocksEdition)
  public static func getInstance() -> NativeblocksCore.NativeblocksManager
  public func provideBlock(blockKeyType: Swift.String, block: any NativeblocksCore.INativeBlock)
  @objc deinit
}
public struct NativeblocksProviders : SwiftUI.View {
  public init(route: Swift.String)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s16NativeblocksCore0A9ProvidersV4bodyQrvp", 0) __
}
@_hasMissingDesignatedInitializers public class NativeBlockProvider {
  @objc deinit
}
extension NativeblocksCore.NativeActionTriggerThen : Swift.RawRepresentable {}
